{"version":3,"file":"static/js/255.34c1b1b7.chunk.js","mappings":"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","sources":["components/Gallery.jsx","components/Header.jsx","components/cards/GalleryCard.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Chrono } from 'react-chrono';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { ThemeContext } from 'styled-components';\nimport endpoints from '../constants/endpoints';\nimport Header from './Header';\nimport FallbackSpinner from './FallbackSpinner';\nimport GalleryCard from './cards/GalleryCard';\nimport '../css/gallery.css';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\n\nfunction Gallery(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState('50vw');\n  const [mode, setMode] = useState('HORIZONTAL');\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    fetch(endpoints.gallery, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode('VERTICAL');\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth('90vw');\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth('75vw');\n    } else {\n      setWidth('50vw');\n    }\n  }, []);\n\n  const numberOfItems = showMore && data ? data.length : 6;\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              {/* <Chrono\n                allowDynamicUpdate\n                // useReadMore={true}\n                items={data.gallery}\n                cardHeight={250}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.accentColor,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColor: theme.chronoTheme.titleColor,\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.gallery.map((shoot) => (shoot.icon ? (\n                    <img\n                      key={shoot.icon.src}\n                      src={shoot.icon.src}\n                      alt={shoot.icon.alt}\n                    />\n                  ) : null))}\n                </div>\n              </Chrono> */}\n              <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n                {data.gallery?.slice(0, numberOfItems).map((gallery) => (\n                  <Fade key={gallery.subTitle}>\n                    <GalleryCard gallery={gallery} />\n                  </Fade>\n                ))}\n              </Row>\n\n              {!showMore\n                && (\n                <Button\n                  style={styles.showMoreStyle}\n                  variant={theme.bsSecondaryVariant}\n                  onClick={() => setShowMore(true)}\n                >\n                  show more\n                </Button>\n                )}\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nGallery.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Gallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport { Button, Card, CarouselItem, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport ImageGallery from 'react-image-gallery'\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'center',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  imageStyle: {\n    maxWidth: \"100%\",\n    minWidth: \"200px\",\n    height: \"auto\",\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst GalleryCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { gallery } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        {/* <Card.Img variant=\"top\" src={gallery?.image} /> */}\n        {/* <ImageGallery items={gallery.images} /> */}\n        <Card.Body>\n          <Carousel fade interval={null}>\n            {gallery.images.map((image) => \n              (<Carousel.Item>\n                <img src={image} style={styles.imageStyle}/>\n                <Carousel.Caption>\n                  {gallery.cardSubtitle}\n                </Carousel.Caption>\n              </Carousel.Item>)\n            )}\n          </Carousel>\n        </Card.Body>\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{gallery.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(gallery.cardTitle)}\n          </Card.Text>\n          <Button\n            key={gallery.href}\n            style={styles.buttonStyle}\n            variant={'outline-' + theme.bsSecondaryVariant}\n            onClick={() => window.open(gallery.href, '_blank')}\n          >\n            Collection\n          </Button>\n        </Card.Body>\n        {/* {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )} */}\n      </Card>\n    </Col>\n  );\n};\n\nGalleryCard.propTypes = {\n  gallery: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    cardTitle: PropTypes.string.isRequired,\n    cardSubtitle: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired,\n    images: PropTypes.arrayOf(PropTypes.string.isRequired),\n  }).isRequired,\n};\n\nexport default GalleryCard;\n"],"names":["styles","containerStyle","marginBottom","showMoreStyle","margin","props","_data$gallery","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","width","setWidth","_useState5","_useState6","setMode","_useState7","_useState8","showMore","setShowMore","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","gallery","method","then","res","json","catch","err","window","innerWidth","numberOfItems","length","_jsxs","_Fragment","children","_jsx","Header","title","Fade","style","className","Container","Row","xs","sm","md","lg","slice","map","GalleryCard","subTitle","Button","variant","bsSecondaryVariant","onClick","FallbackSpinner","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","imageStyle","maxWidth","minWidth","height","buttonStyle","text","Col","Card","_objectSpread","backgroundColor","cardBackground","borderColor","cardBorderColor","Body","Carousel","fade","interval","images","image","Item","src","Caption","cardSubtitle","Title","Text","cardTitle","ReactMarkdown","open","href"],"sourceRoot":""}