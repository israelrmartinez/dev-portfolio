{"version":3,"file":"static/js/328.d717e42d.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Badge.js","components/cards/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["Badge","React","_ref","ref","bsPrefix","_ref$bg","bg","_ref$pill","pill","text","className","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_jsx","_objectSpread","classNames","concat","displayName","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","_project$links","theme","useContext","ThemeContext","project","Col","children","_jsxs","Card","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","Img","variant","src","image","Body","Title","title","Text","bodyText","ReactMarkdown","links","map","link","Button","onClick","window","open","href","tags","Footer","cardFooterBackground","tag","bsPrimaryVariant","_ref$variant","size","_ref$active","active","_ref$disabled","disabled","_useButtonProps","useButtonProps","tagName","_useButtonProps2","_slicedToArray","buttonProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","_ref$body","body","Object","assign","Subtitle","Link","Header","ImgOverlay","_useCol","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","_useCol2","_useCol2$","colProps","_excluded2","_useCol2$2","_useCol2$2$as","length"],"sourceRoot":""}