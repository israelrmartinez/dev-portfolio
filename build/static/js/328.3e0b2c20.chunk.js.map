{"version":3,"file":"static/js/328.3e0b2c20.chunk.js","mappings":"0RAQMA,EAAqBC,EAAAA,YAAiB,WAQzCC,GAAQ,IAPTC,EAOS,EAPTA,SACAC,EAMS,EANTA,GACAC,EAKS,EALTA,KACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,UAGS,IAFTC,GAAIC,OAEK,MAFO,OAEP,EADNC,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,SAC5C,OAAoBU,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,QACvBP,IAAKA,GACFQ,GAFmB,IAGtBH,UAAWO,IAAWP,EAAWI,EAAQN,GAAQ,eAAgBC,GAAQ,QAAJ,OAAYA,GAAQF,GAAM,MAAJ,OAAUA,MAExG,IACDJ,EAAMe,YAAc,QACpBf,EAAMgB,aArBe,CACnBZ,GAAI,UACJC,MAAM,GAoBR,Q,kDClBMY,EAAS,CACbC,WAAY,CACVC,YAAa,GACbC,aAAc,GACdC,WAAY,EACZC,cAAe,EACfC,OAAQ,GAEVC,UAAW,CACTC,aAAc,IAEhBC,eAAgB,CACdC,SAAU,GACVC,WAAY,KAEdC,cAAe,CACbC,UAAW,QAEbC,UAAW,CACTC,eAAgB,OAChBC,QAAS,IAEXC,YAAa,CACXX,OAAQ,IAsEZ,EAlEoB,SAACb,GAAW,IAAD,EAENJ,EADjB6B,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,IAGjBC,EAAY5B,EAAZ4B,QAER,OACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CACEC,OAAK,kBACAxB,EAAOO,WADP,IAEHkB,gBAAiBP,EAAMQ,eACvBC,YAAaT,EAAMU,kBAErBvC,KAAM6B,EAAMW,mBANd,WAQE,SAACN,EAAA,MAAD,CAAUO,QAAQ,MAAMC,IAAG,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAASW,SACtC,UAACT,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,CAAYC,MAAOxB,EAAOS,eAA1B,SAA2CY,EAAQY,SACnD,SAACV,EAAA,OAAD,CAAWC,MAAOxB,EAAOY,cAAzB,UAjBevB,EAkBEgC,EAAQa,UAlBD,SAAC,IAAD,CAAeC,SAAU9C,WAsBnD,SAACkC,EAAA,OAAD,iBACGF,QADH,IACGA,GADH,UACGA,EAASe,aADZ,aACG,EAAgBC,KAAI,SAACC,GAAD,OACnB,SAACC,EAAA,EAAD,CAEEf,MAAOxB,EAAOiB,YACda,QAAS,WAAaZ,EAAMW,mBAC5BW,QAAS,kBAAMC,OAAOC,KAAKJ,EAAKK,KAAM,SAA7B,EAJX,SAMGL,EAAKjD,MALDiD,EAAKK,KAFO,MAWtBtB,EAAQuB,OACP,SAACrB,EAAA,SAAD,CAAaC,MAAO,CAAEC,gBAAiBP,EAAM2B,sBAA7C,SACGxB,EAAQuB,KAAKP,KAAI,SAACS,GAAD,OAChB,SAAC,EAAD,CAEE1D,MAAI,EACJD,GAAI+B,EAAMW,mBACVxC,KAAM6B,EAAM6B,iBACZvB,MAAOxB,EAAOC,WALhB,SAOG6C,GANIA,EAFS,UAgB7B,C,4KC/EKP,EAAsBvD,EAAAA,YAAiB,WAQ1CC,GAAQ,IAPTM,EAOS,EAPTA,GACAL,EAMS,EANTA,SACA4C,EAKS,EALTA,QACAkB,EAIS,EAJTA,KACAC,EAGS,EAHTA,OACA3D,EAES,EAFTA,UACGG,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,OAC5C,GAEKgE,EAAAA,EAAAA,KAAe,QAClBC,QAAS5D,GACNE,IAJL,eAAO2D,EAAP,KAMM5D,EANN,KACE2D,QAMF,OAAoBvD,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,kBAAgB4D,GACpC3D,GADmB,IAEtBR,IAAKA,EACLK,UAAWO,IAAWP,EAAWI,EAAQuD,GAAU,SAAUnB,GAAW,GAAJ,OAAOpC,EAAP,YAAiBoC,GAAWkB,GAAQ,GAAJ,OAAOtD,EAAP,YAAiBsD,GAAQvD,EAAMkD,MAAQlD,EAAM4D,UAAY,cAEhK,IACDd,EAAOzC,YAAc,SACrByC,EAAOxC,aA7Bc,CACnB+B,QAAS,UACTmB,QAAQ,EACRI,UAAU,GA2BZ,K,4LC/BMC,EAAuBtE,EAAAA,YAC7B,WAMGC,GAAQ,IALTC,EAKS,EALTA,SACAI,EAIS,EAJTA,UACAwC,EAGS,EAHTA,QAGS,IAFTvC,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,YAC5C,OAAoBU,EAAAA,EAAAA,KAAKJ,GAAD,QACtBP,IAAKA,EACLK,UAAWO,IAAWiC,EAAU,GAAH,OAAMpC,EAAN,YAAgBoC,GAAYpC,EAAQJ,IAC9DG,GAEN,IACD6D,EAAQxD,YAAc,UACtB,Q,0CCdMyD,EAA0BvE,EAAAA,YAAiB,WAM9CC,GAAQ,IALTC,EAKS,EALTA,SACAI,EAIS,EAJTA,UAIS,IAFTC,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,eACtCsE,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,CAClCC,mBAAoBhE,EADO,GAEzB,CAACA,IACL,OAAoBE,EAAAA,EAAAA,KAAK+D,EAAAA,EAAAA,SAA4B,CACnDC,MAAOJ,EACPrB,UAAuBvC,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,QAC1BP,IAAKA,GACFQ,GAFsB,IAGzBH,UAAWO,IAAWP,EAAWI,OAGtC,IACD6D,EAAWzD,YAAc,aACzB,Q,uECnBM+D,GAAgBC,EAAAA,EAAAA,GAAiB,MACjCC,GAAgBD,EAAAA,EAAAA,GAAiB,MACjCE,GAAWC,EAAAA,EAAAA,GAAmB,aAC9BC,GAAYD,EAAAA,EAAAA,GAAmB,aAAc,CACjDzE,UAAWqE,IAEPM,GAAeF,EAAAA,EAAAA,GAAmB,gBAAiB,CACvDzE,UAAWuE,IAEPK,GAAWH,EAAAA,EAAAA,GAAmB,YAAa,CAC/CzE,UAAW,MAEP6E,GAAWJ,EAAAA,EAAAA,GAAmB,YAAa,CAC/CzE,UAAW,MAEP8E,GAAaL,EAAAA,EAAAA,GAAmB,eAChCM,GAAiBN,EAAAA,EAAAA,GAAmB,oBAIpC1C,EAAoBvC,EAAAA,YAAiB,WAWxCC,GAAQ,IAVTC,EAUS,EAVTA,SACAI,EASS,EATTA,UACAH,EAQS,EARTA,GACAE,EAOS,EAPTA,KACAmF,EAMS,EANTA,OACAC,EAKS,EALTA,KACAtC,EAIS,EAJTA,SAIS,IAFT5C,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,QAC5C,OAAoBU,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,QACvBP,IAAKA,GACFQ,GAFmB,IAGtBH,UAAWO,IAAWP,EAAWI,EAAQP,GAAM,MAAJ,OAAUA,GAAME,GAAQ,QAAJ,OAAYA,GAAQmF,GAAU,UAAJ,OAAcA,IACvGrC,SAAUsC,GAAoB7E,EAAAA,EAAAA,KAAKoE,EAAU,CAC3C7B,SAAUA,IACPA,IAER,IACDZ,EAAKzB,YAAc,OACnByB,EAAKxB,aA1BgB,CACnB0E,MAAM,GA0BR,MAAeC,OAAOC,OAAOpD,EAAM,CACjCqD,IAAKtB,EACLuB,MAAOX,EACPY,SAAUX,EACVY,KAAMf,EACNgB,KAAMZ,EACNa,KAAMZ,EACNa,OAAQ3B,EACR4B,OAAQb,EACRc,WAAYb,G,wJCjBd,IAAMjD,EAAmBtC,EAAAA,YACzB,SAACS,EAAOR,GACN,MA1CK,YAKJ,IAJDM,EAIC,EAJDA,GACAL,EAGC,EAHDA,SACAI,EAEC,EAFDA,UACGG,GACF,YACDP,GAAWS,EAAAA,EAAAA,IAAmBT,EAAU,OACxC,IAAMmG,GAAcC,EAAAA,EAAAA,MACdC,EAAQ,GACRC,EAAU,GAuBhB,OAtBAH,EAAYI,SAAQ,SAAAC,GAClB,IAEIC,EACAC,EACAC,EAJEC,EAAYrG,EAAMiG,UACjBjG,EAAMiG,GAKY,kBAAdI,GAAuC,MAAbA,GAEjCH,EAGEG,EAHFH,KACAC,EAEEE,EAFFF,OACAC,EACEC,EADFD,OAGFF,EAAOG,EAGT,IAAMC,EAAqB,OAAbL,EAAA,WAAwBA,GAAa,GAC/CC,GAAMJ,EAAMS,MAAc,IAATL,EAAA,UAAmBzG,GAAnB,OAA8B6G,GAA9B,UAA2C7G,GAA3C,OAAsD6G,EAAtD,YAA+DJ,IACvE,MAATE,GAAeL,EAAQQ,KAAR,eAAqBD,EAArB,YAA8BF,IACnC,MAAVD,GAAgBJ,EAAQQ,KAAR,gBAAsBD,EAAtB,YAA+BH,GACpD,IACM,EAAC,kBAAKnG,GAAN,IACLH,UAAWO,IAAAA,WAAA,GAAWP,GAAX,OAAyBiG,EAAUC,MAC7C,CACDjG,GAAAA,EACAL,SAAAA,EACAqG,MAAAA,GAEH,CAUMU,CAAOxG,GAPZ,sBACEH,EADF,EACEA,UACG4G,GAFL,uBAIE3G,GAAIC,OAJN,MAIkB,MAJlB,EAKEN,EALF,EAKEA,SACAqG,EANF,EAMEA,MAEF,OAAoB3F,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,UAAgB0G,GAAjB,IACtBjH,IAAKA,EACLK,UAAWO,IAAWP,GAAYiG,EAAMY,QAAUjH,KAErD,IACDoC,EAAIxB,YAAc,MAClB,K","sources":["../node_modules/react-bootstrap/esm/Badge.js","components/cards/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, { useContext } from 'react';\r\nimport {\r\n  Button, Card, Badge, Col,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = {\r\n  badgeStyle: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    margin: 5,\r\n  },\r\n  cardStyle: {\r\n    borderRadius: 10,\r\n  },\r\n  cardTitleStyle: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  },\r\n  cardTextStyle: {\r\n    textAlign: 'left',\r\n  },\r\n  linkStyle: {\r\n    textDecoration: 'none',\r\n    padding: 10,\r\n  },\r\n  buttonStyle: {\r\n    margin: 5,\r\n  },\r\n};\r\n\r\nconst ProjectCard = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\r\n\r\n  const { project } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Card\r\n        style={{\r\n          ...styles.cardStyle,\r\n          backgroundColor: theme.cardBackground,\r\n          borderColor: theme.cardBorderColor,\r\n        }}\r\n        text={theme.bsSecondaryVariant}\r\n      >\r\n        <Card.Img variant=\"top\" src={project?.image} />\r\n        <Card.Body>\r\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\r\n          <Card.Text style={styles.cardTextStyle}>\r\n            {parseBodyText(project.bodyText)}\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        <Card.Body>\r\n          {project?.links?.map((link) => (\r\n            <Button\r\n              key={link.href}\r\n              style={styles.buttonStyle}\r\n              variant={'outline-' + theme.bsSecondaryVariant}\r\n              onClick={() => window.open(link.href, '_blank')}\r\n            >\r\n              {link.text}\r\n            </Button>\r\n          ))}\r\n        </Card.Body>\r\n        {project.tags && (\r\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\r\n            {project.tags.map((tag) => (\r\n              <Badge\r\n                key={tag}\r\n                pill\r\n                bg={theme.bsSecondaryVariant}\r\n                text={theme.bsPrimaryVariant}\r\n                style={styles.badgeStyle}\r\n              >\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    bodyText: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    links: PropTypes.arrayOf(PropTypes.shape),\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["Badge","React","ref","bsPrefix","bg","pill","text","className","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","theme","useContext","ThemeContext","project","Col","Card","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","variant","src","image","title","bodyText","children","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant","size","active","useButtonProps","tagName","buttonProps","disabled","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","breakpoints","useBootstrapBreakpoints","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length"],"sourceRoot":""}