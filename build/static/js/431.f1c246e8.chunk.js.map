{"version":3,"file":"static/js/431.f1c246e8.chunk.js","mappings":"iTAcMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,IAEhBK,WAAY,CACVC,MAAO,OACPC,OAAQ,SAkFZ,MA9EA,SAAkBC,GAChB,IAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,IACjBC,EAAWJ,EAAXI,OACR,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRC,MAAMC,EAAAA,EAAAA,SAAoB,CACxBC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACC,GAAD,OAASN,EAAQM,EAAIE,SAArB,IACLC,OAAM,SAACC,GAAD,OAASA,CAAT,GACV,GAAE,KAGD,iCACE,SAACC,EAAA,QAAD,CAAQC,MAAOf,IAEdE,GAEG,gBAAKc,UAAU,4BAAf,UACE,SAACC,EAAA,EAAD,WACE,SAAC,EAAAC,iBAAD,CACEC,UAAWtB,EAAMuB,kBADnB,SAGKlB,EAAKmB,KAAI,SAACC,GAAD,OACV,SAAC,KAAD,CAAMN,UAAU,OAAhB,UACE,UAAC,EAAAO,wBAAD,CAAyBP,UAAU,4BACjCQ,MAAO1C,EAAOU,UACdiC,aAAc,CAAEC,WAAY7B,EAAM6B,YAClCC,KAAML,EAAKK,KAHb,WAKA,gBAAKC,IAAKN,EAAKO,IAAKC,IAAKR,EAAKQ,IAAKN,MAAO1C,EAAOW,cACjD,eAAIuB,UAAU,aAAd,SACKM,EAAKP,SAER,iBAAKS,MAAO1C,EAAOI,uBAAnB,WACA,cAAG8B,UAAU,OAAOe,KAAMT,EAAKS,KAAMC,OAAO,SAASC,IAAI,aAAzD,UACE,eAAIT,OAAK,kBAAO1C,EAAOO,eAAd,IAA6B6C,MAAOrC,EAAMsC,cAAnD,uCAIA,gBAAIX,MAAO1C,EAAOS,YAAlB,qBAEG,IAFH,mBAMF,eAAIiC,MAAO1C,EAAOC,QAAlB,SACGuC,EAAKc,gBAAgBf,KAAI,SAACgB,GAAD,OACxB,4BACE,yBACE,SAAC,IAAD,CACEC,SAAUD,EACVE,WAAY,CACVC,EAAG,aAIT,oBATQH,EADc,UAxBtB,WA4ChB,SAACI,EAAA,QAAD,MAGX,C,2DCjGD,UATA,SAAgB7C,GACd,IAAQmB,EAAUnB,EAAVmB,MACR,OAAO,gBAAKC,UAAU,SAAf,SAAyBD,GACjC,C","sources":["components/Articles.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Fade from 'react-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/articles.css';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n  },\r\n  imageStyle: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n};\r\n\r\nfunction Articles(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.articles, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.articles))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <VerticalTimeline\r\n                lineColor={theme.timelineLineColor}\r\n                >\r\n                  {data.map((item) => (\r\n                  <Fade className=\"fade\">\r\n                    <VerticalTimelineElement className=\"vertical-timeline-element\"\r\n                      style={styles.itemStyle}\r\n                      contentStyle={{ background: theme.background }}\r\n                      date={item.date}\r\n                    >\r\n                    <img src={item.img} alt={item.alt} style={styles.imageStyle}/>\r\n                    <h2 className=\"item-title\">\r\n                        {item.title}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                      <a className=\"link\" href={item.href} target=\"_blank\" rel=\"noreferrer\">\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                          Yakima Herald-Republic\r\n                        </h4>\r\n                        </a>\r\n                        <h5 style={styles.inlineChild}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          Unleashed\r\n                        </h5>\r\n                      </div>\r\n                      <ul style={styles.ulStyle}>\r\n                        {item.workDescription.map((point) => (\r\n                          <div key={point}>\r\n                            <li>\r\n                              <ReactMarkdown\r\n                                children={point}\r\n                                components={{\r\n                                  p: 'span',\r\n                                }}\r\n                              />\r\n                            </li>\r\n                            <br />\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </VerticalTimelineElement>\r\n                  </Fade>\r\n                ))}\r\n              </VerticalTimeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nArticles.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Articles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","imageStyle","width","height","props","theme","useContext","ThemeContext","header","useState","data","setData","useEffect","fetch","endpoints","method","then","res","json","articles","catch","err","Header","title","className","Container","VerticalTimeline","lineColor","timelineLineColor","map","item","VerticalTimelineElement","style","contentStyle","background","date","src","img","alt","href","target","rel","color","accentColor","workDescription","point","children","components","p","FallbackSpinner"],"sourceRoot":""}