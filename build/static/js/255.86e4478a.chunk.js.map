{"version":3,"file":"static/js/255.86e4478a.chunk.js","mappings":"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","sources":["components/Gallery.jsx","components/Header.jsx","components/cards/GalleryCard.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Chrono } from 'react-chrono';\r\nimport { Container, Row, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal';\r\nimport { ThemeContext } from 'styled-components';\r\nimport endpoints from '../constants/endpoints';\r\nimport Header from './Header';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport GalleryCard from './cards/GalleryCard';\r\nimport '../css/gallery.css';\r\n\r\nconst styles = {\r\n  containerStyle: {\r\n    marginBottom: 25,\r\n  },\r\n  showMoreStyle: {\r\n    margin: 25,\r\n  },\r\n};\r\n\r\nfunction Gallery(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n  const [width, setWidth] = useState('50vw');\r\n  const [mode, setMode] = useState('HORIZONTAL');\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.gallery, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res))\r\n      .catch((err) => err);\r\n\r\n    if (window?.innerWidth < 576) {\r\n      setMode('VERTICAL');\r\n    }\r\n\r\n    if (window?.innerWidth < 576) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\r\n      setWidth('90vw');\r\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\r\n      setWidth('75vw');\r\n    } else {\r\n      setWidth('50vw');\r\n    }\r\n  }, []);\r\n\r\n  const numberOfItems = showMore && data ? data.length : 6;\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data ? (\r\n        <Fade>\r\n          <div style={{ width }} className=\"section-content-container\">\r\n            <Container>\r\n              {/* <Chrono\r\n                allowDynamicUpdate\r\n                // useReadMore={true}\r\n                items={data.gallery}\r\n                cardHeight={250}\r\n                mode={mode}\r\n                theme={{\r\n                  primary: theme.accentColor,\r\n                  secondary: theme.accentColor,\r\n                  cardBgColor: theme.chronoTheme.cardBgColor,\r\n                  cardForeColor: theme.chronoTheme.cardForeColor,\r\n                  titleColor: theme.chronoTheme.titleColor,\r\n                }}\r\n              >\r\n                <div className=\"chrono-icons\">\r\n                  {data.gallery.map((shoot) => (shoot.icon ? (\r\n                    <img\r\n                      key={shoot.icon.src}\r\n                      src={shoot.icon.src}\r\n                      alt={shoot.icon.alt}\r\n                    />\r\n                  ) : null))}\r\n                </div>\r\n              </Chrono> */}\r\n              <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\r\n                {data.gallery?.slice(0, numberOfItems).map((gallery) => (\r\n                  <Fade key={gallery.subTitle}>\r\n                    <GalleryCard gallery={gallery} />\r\n                  </Fade>\r\n                ))}\r\n              </Row>\r\n\r\n              {!showMore\r\n                && (\r\n                <Button\r\n                  style={styles.showMoreStyle}\r\n                  variant={theme.bsSecondaryVariant}\r\n                  onClick={() => setShowMore(true)}\r\n                >\r\n                  show more\r\n                </Button>\r\n                )}\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nGallery.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from 'react';\r\nimport { Button, Card, CarouselItem, Col } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ImageGallery from 'react-image-gallery'\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nconst styles = {\r\n  badgeStyle: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    margin: 5,\r\n  },\r\n  cardStyle: {\r\n    borderRadius: 10,\r\n  },\r\n  cardTitleStyle: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  },\r\n  cardTextStyle: {\r\n    textAlign: 'center',\r\n  },\r\n  linkStyle: {\r\n    textDecoration: 'none',\r\n    padding: 10,\r\n  },\r\n  imageStyle: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  buttonStyle: {\r\n    margin: 5,\r\n  },\r\n};\r\n\r\nconst GalleryCard = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\r\n\r\n  const { gallery } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Card\r\n        style={{\r\n          ...styles.cardStyle,\r\n          backgroundColor: theme.cardBackground,\r\n          borderColor: theme.cardBorderColor,\r\n        }}\r\n        text={theme.bsSecondaryVariant}\r\n      >\r\n        {/* <Card.Img variant=\"top\" src={gallery?.image} /> */}\r\n        {/* <ImageGallery items={gallery.images} /> */}\r\n        <Card.Body>\r\n          <Carousel fade interval={null}>\r\n            {gallery.images.map((image) => \r\n              (<Carousel.Item>\r\n                <img src={image} style={styles.imageStyle}/>\r\n                <Carousel.Caption>\r\n                  {gallery.cardSubtitle}\r\n                </Carousel.Caption>\r\n              </Carousel.Item>)\r\n            )}\r\n          </Carousel>\r\n        </Card.Body>\r\n        <Card.Body>\r\n          <Card.Title style={styles.cardTitleStyle}>{gallery.title}</Card.Title>\r\n          <Card.Text style={styles.cardTextStyle}>\r\n            {parseBodyText(gallery.cardTitle)}\r\n          </Card.Text>\r\n          <Button\r\n            key={gallery.href}\r\n            style={styles.buttonStyle}\r\n            variant={'outline-' + theme.bsSecondaryVariant}\r\n            onClick={() => window.open(gallery.href, '_blank')}\r\n          >\r\n            Collection\r\n          </Button>\r\n        </Card.Body>\r\n        {/* {project.tags && (\r\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\r\n            {project.tags.map((tag) => (\r\n              <Badge\r\n                key={tag}\r\n                pill\r\n                bg={theme.bsSecondaryVariant}\r\n                text={theme.bsPrimaryVariant}\r\n                style={styles.badgeStyle}\r\n              >\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </Card.Footer>\r\n        )} */}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nGalleryCard.propTypes = {\r\n  gallery: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    cardTitle: PropTypes.string.isRequired,\r\n    cardSubtitle: PropTypes.string.isRequired,\r\n    href: PropTypes.string.isRequired,\r\n    images: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }).isRequired,\r\n};\r\n\r\nexport default GalleryCard;\r\n"],"names":["styles","containerStyle","marginBottom","showMoreStyle","margin","props","theme","useContext","ThemeContext","header","useState","data","setData","width","setWidth","setMode","showMore","setShowMore","useEffect","fetch","endpoints","method","then","res","json","catch","err","window","innerWidth","numberOfItems","length","Header","title","style","className","Container","Row","xs","sm","md","lg","gallery","slice","map","GalleryCard","subTitle","Button","variant","bsSecondaryVariant","onClick","FallbackSpinner","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","imageStyle","height","buttonStyle","text","backgroundColor","cardBackground","borderColor","cardBorderColor","fade","interval","images","image","src","cardSubtitle","cardTitle","children","open","href"],"sourceRoot":""}